name: Release

on:
  push:
    tags:
      - "v*"
      - "lamina-core-v*"
      - "lamina-llm-serve-v*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.13
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Run tests
      run: uv run pytest
    
    - name: Determine package to release
      id: package
      run: |
        if [[ $GITHUB_REF_NAME == lamina-core-v* ]]; then
          echo "package=lamina-core" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF_NAME#lamina-core-v}" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF_NAME == lamina-llm-serve-v* ]]; then
          echo "package=lamina-llm-serve" >> $GITHUB_OUTPUT  
          echo "version=${GITHUB_REF_NAME#lamina-llm-serve-v}" >> $GITHUB_OUTPUT
        else
          echo "package=all" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
        fi
    
    - name: Build specific package
      if: steps.package.outputs.package != 'all'
      run: |
        cd packages/${{ steps.package.outputs.package }}
        uv build
    
    - name: Build all packages
      if: steps.package.outputs.package == 'all'
      run: |
        cd packages/lamina-core && uv build
        cd ../lamina-llm-serve && uv build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        if [ "${{ steps.package.outputs.package }}" = "all" ]; then
          uv run twine upload packages/*/dist/*
        else
          uv run twine upload packages/${{ steps.package.outputs.package }}/dist/*
        fi

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-publish
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: |
          ## Release Notes
          
          This release includes updates to the Lamina OS framework components.
          
          ### Installation
          
          ```bash
          pip install lamina-core lamina-llm-serve
          ```
          
          ### What's Changed
          
          See the [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ---
          
          *Built with conscious intention and breath-first development practices.*
        draft: false
        prerelease: false