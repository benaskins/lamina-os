name: Security Scanning

on:
  pull_request:
    branches: [main, develop]
    # Only run on security-sensitive changes
    paths:
      - 'packages/**'
      - 'terraform/**'
      - '.github/workflows/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'build-env/**'
      - '.gitleaks.toml'
      - '.pre-commit-config.yaml'
      - 'scripts/**'
  schedule:
    # Run full security scans weekly (not daily - too much)
    - cron: '0 2 * * 1'  # Monday 2 AM UTC
  workflow_dispatch:

jobs:
  secret-detection:
    name: Secret Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for secret scanning
        fetch-depth: 0
        
    - name: Run GitLeaks secret detection
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Optional for GitLeaks+
      with:
        config-path: .gitleaks.toml
        
    - name: Run TruffleHog secret scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  dependency-vulnerabilities:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    # Only run on scheduled runs or manual trigger (not every PR)
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.12
      
    - name: Install dependencies
      run: uv sync --extra dev
      
    - name: Run pip-audit vulnerability check
      run: |
        uv add pip-audit
        uv run pip-audit --format=json --output=pip-audit-report.json
        
    - name: Upload pip-audit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pip-audit-report
        path: pip-audit-report.json

  code-security-scan:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.12
      
    - name: Install dependencies
      run: uv sync --extra dev
      
    - name: Run Bandit security linting
      run: |
        uv run bandit -r packages/ -f json -o bandit-report.json || true
        uv run bandit -r packages/ -f txt || true
        
    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json
        
    - name: Run Semgrep security scanning
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/python
        generateSarif: "1"
        
    - name: Upload Semgrep results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: semgrep.sarif

  terraform-security:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        working_directory: ./terraform
        soft_fail: true

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [secret-detection, dependency-vulnerabilities, code-security-scan, terraform-security]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Security Summary Report
      run: |
        echo "# 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check job results
        echo "## Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "- **Secret Detection**: ${{ needs.secret-detection.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependency Vulnerabilities**: ${{ needs.dependency-vulnerabilities.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Code Security**: ${{ needs.code-security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Terraform Security**: ${{ needs.terraform-security.result }}" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Reports Generated" >> $GITHUB_STEP_SUMMARY
        echo "📊 Check the **Security** tab for detailed SARIF reports" >> $GITHUB_STEP_SUMMARY
        echo "📁 Download artifacts for JSON reports from Safety, pip-audit, and Bandit" >> $GITHUB_STEP_SUMMARY
        
        # Set overall status
        if [[ "${{ needs.secret-detection.result }}" == "failure" ]]; then
          echo "⚠️ **CRITICAL**: Secrets detected in code!" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Security scans completed. Review reports for any findings." >> $GITHUB_STEP_SUMMARY