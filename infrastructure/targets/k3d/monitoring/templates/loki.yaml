{{- if .Values.loki.enabled }}
---
# Loki ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: {{ .Values.namespace }}
data:
  loki.yaml: |
    auth_enabled: false
    server:
      http_listen_port: 3100
    common:
      instance_addr: 127.0.0.1
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        kvstore:
          store: inmemory
    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100
    schema_config:
      configs:
        - from: 2023-01-01
          store: tsdb
          object_store: filesystem
          schema: v12
          index:
            prefix: index_
            period: 24h
    ruler:
      alertmanager_url: http://localhost:9093
---
# Loki Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: {{ .Values.namespace }}
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: {{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}
        imagePullPolicy: {{ .Values.loki.image.pullPolicy }}
        args:
          - -config.file=/etc/loki/loki.yaml
        ports:
        - containerPort: 3100
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
        - name: loki-storage
          mountPath: /loki
        resources:
{{ toYaml .Values.loki.resources | indent 10 }}
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
      - name: loki-storage
        {{- if .Values.loki.persistence.enabled }}
        persistentVolumeClaim:
          claimName: loki-data-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
---
# Loki PersistentVolumeClaim
{{- if .Values.loki.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data-pvc
  namespace: {{ .Values.namespace }}
  labels:
    app: loki
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.loki.persistence.size | default "50Gi" }}
  storageClassName: lamina-host-storage
  selector:
    matchLabels:
      app: loki
{{- end }}
---
# Loki Service
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: {{ .Values.namespace }}
  labels:
    app: loki
spec:
  selector:
    app: loki
  ports:
  - port: 3100
    targetPort: 3100
    name: http
{{- end }}
