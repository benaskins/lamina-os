---
apiVersion: v1
kind: Namespace
metadata:
  name: lamina-llm-serve
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamina-llm-serve
  namespace: lamina-llm-serve
  labels:
    app: lamina-llm-serve
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lamina-llm-serve
  template:
    metadata:
      labels:
        app: lamina-llm-serve
    spec:
      containers:
      - name: lamina-llm-serve
        image: python:3.13-slim
        command: ["/bin/bash"]
        args: ["-c", "pip install /app && python -m lamina_llm_serve.server --host 0.0.0.0 --port 8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PYTHONPATH
          value: "/app"
        volumeMounts:
        - name: app-code
          mountPath: /app
        - name: models-data
          mountPath: /app/models
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
      volumes:
      - name: app-code
        hostPath:
          path: /Users/benaskins/dev/lamina-os-test-improvements/packages/lamina-llm-serve
          type: Directory
      - name: models-data
        hostPath:
          path: /Users/benaskins/dev/lamina-os-test-improvements/packages/lamina-llm-serve/models
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: lamina-llm-serve
  namespace: lamina-llm-serve
  labels:
    app: lamina-llm-serve
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: lamina-llm-serve
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: lamina-llm-serve-vs
  namespace: lamina-llm-serve
spec:
  hosts:
  - "llm.lamina.local"
  gateways:
  - istio-system/lamina-gateway
  http:
  - route:
    - destination:
        host: lamina-llm-serve.lamina-llm-serve.svc.cluster.local
        port:
          number: 8080