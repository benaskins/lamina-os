{{- if .Values.grafana.enabled }}
---
# Grafana ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: {{ .Values.namespace }}
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    {{- if .Values.prometheus.enabled }}
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
    {{- end }}
    {{- if .Values.loki.enabled }}
    - name: Loki
      type: loki
      access: proxy
      url: http://loki:3100
    {{- end }}
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.namespace }}
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: {{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "{{ .Values.grafana.adminPassword }}"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        - name: grafana-dashboard-provider
          mountPath: /etc/grafana/provisioning/dashboards
        resources:
{{ toYaml .Values.grafana.resources | indent 10 }}
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-storage
        {{- if .Values.grafana.persistence.enabled }}
        persistentVolumeClaim:
          claimName: grafana-data-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-dashboard-provider
        configMap:
          name: grafana-dashboard-provider
---
# Grafana PersistentVolumeClaim
{{- if .Values.grafana.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data-pvc
  namespace: {{ .Values.namespace }}
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.grafana.persistence.size | default "10Gi" }}
  storageClassName: lamina-host-storage
  selector:
    matchLabels:
      app: grafana
{{- end }}
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ .Values.namespace }}
  labels:
    app: grafana
spec:
  type: {{ .Values.serviceExposure.type | default .Values.grafana.service.type }}
  selector:
    app: grafana
  ports:
  - port: {{ .Values.grafana.service.port }}
    targetPort: 3000
    {{- if and (eq (.Values.serviceExposure.type | default .Values.grafana.service.type) "NodePort") .Values.serviceExposure.grafana.nodePort }}
    nodePort: {{ .Values.serviceExposure.grafana.nodePort }}
    {{- end }}
    name: http
{{- end }}