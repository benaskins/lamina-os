{{- if .Values.vector.enabled }}
---
# Vector ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config
  namespace: {{ .Values.namespace }}
data:
  vector.toml: |
    [sources.kubernetes_logs]
    type = "kubernetes_logs"
    
    [transforms.parse_logs]
    type = "remap"
    inputs = ["kubernetes_logs"]
    source = '''
    .namespace = .kubernetes.pod_namespace
    .pod = .kubernetes.pod_name
    .container = .kubernetes.container_name
    .node = .kubernetes.pod_node_name
    '''
    
    [sinks.loki]
    type = "loki"
    inputs = ["parse_logs"]
    endpoint = "http://loki:3100"
    encoding.codec = "json"
    labels.namespace = "{{ "{{ namespace }}" }}"
    labels.pod = "{{ "{{ pod }}" }}"
    labels.container = "{{ "{{ container }}" }}"
    labels.node = "{{ "{{ node }}" }}"
---
# Vector DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  namespace: {{ .Values.namespace }}
  labels:
    app: vector
spec:
  selector:
    matchLabels:
      app: vector
  template:
    metadata:
      labels:
        app: vector
    spec:
      serviceAccountName: vector
      containers:
      - name: vector
        image: {{ .Values.vector.image.repository }}:{{ .Values.vector.image.tag }}
        imagePullPolicy: {{ .Values.vector.image.pullPolicy }}
        args:
          - --config
          - /etc/vector/vector.toml
        env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: vector-config
          mountPath: /etc/vector
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        resources:
{{ toYaml .Values.vector.resources | indent 10 }}
      volumes:
      - name: vector-config
        configMap:
          name: vector-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---
# Vector ServiceAccount and RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - pods
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector
subjects:
- kind: ServiceAccount
  name: vector
  namespace: {{ .Values.namespace }}
{{- end }}