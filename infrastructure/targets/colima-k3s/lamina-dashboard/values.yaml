# Default values for lamina-dashboard

# Deployment configuration
replicaCount: 1

image:
  repository: lamina-dashboard
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# Service configuration
service:
  type: ClusterIP
  port: 5001
  targetPort: 5001

# Ingress configuration
ingress:
  enabled: true
  className: ""
  annotations: {}
  hosts:
    - host: dashboard.lamina.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 1Gi

# Health checks
livenessProbe:
  httpGet:
    path: /api/cluster/state
    port: 5001
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 15
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /api/cluster/state
    port: 5001
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 15
  failureThreshold: 5

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Pod security context
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# ServiceAccount
serviceAccount:
  # Create a service account
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

# RBAC for Kubernetes access
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "namespaces", "endpoints"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["networking.istio.io"]
      resources: ["virtualservices", "gateways"]
      verbs: ["get", "list", "watch"]

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Environment variables
env:
  - name: KUBERNETES_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace